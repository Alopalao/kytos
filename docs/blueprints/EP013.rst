Summary
=======

Title
-----
Topology NApp Improvements

Authors
-------
Jeronimo Bezerra (Amlight), Vinicius Arcanjo (RNP), Antonio Francisco (ANSP),
Rogerio Motitsuki (ANSP), Beraldo Leal, (Kytos), Renan Rodrigo (Kytos)

Blueprint Status
----------------
work-in-progress

Priority
--------
high

Tags
----
topology, sdn

Milestone Target
----------------
2018.1 (dalva)

Implementation
--------------
not-started

Assignees
---------

Approvers (PTL)
---------------

Version
-------
0.0.1

Specifications
--------------

**Topology resources**: Switches, Hosts, Interfaces and Links.

Description
===========

By the time of writing of this blueprint, our topology NApp is not completely
aligned with real world networking scenarios. We need to add support to those
scenarios while keeping the current features. We aim to provide the correct
information for network administrators, researchers, students and enthusiasts
as well.

Being a NApp built towards research and development, the current approach is
mostly academic. A more professional approach is proposed by this document.

Network Topology Metadata
-------------------------

Current approach:

New feature:

Porem temos ter que cuidado para que a NApp de topologia não fique responsavel
por tarefas de inventário. O inventário deve ser feito por outra NApp.

Adding new resources to the network
-----------------------------------

Current approach: Every new resource is added to the topology as soon as it
is discovered. This allows the NApp to dinamically build the topology for an
environment without external influence, and to respond quickly to changes.
Experiments which expect fast network growth or dynamic resource allocation
may need this feature.

New feature: Every new resource discovered in the network triggers an
alert to the network administrator. In this way, one can decide to approve the
resource and make it part of the topology or ignore it and take the proper
actions. This adds a small layer of reliability to other services that depend
on the topology NApp.

Implementation design: Automatically adding resources is implemented and may
need only some tweaks. For the profesional option, we can take different
approaches: add the resource to the topology, but mark it as 'authorization
pending' or move it to a separate section of pending resources.
For the first approach, authorizing a resource removes the 'pending' mark. For
the second approach, authorizing a resource effectively inserts it in the
topology.

Removing resources from the network
-----------------------------------

Current approach: A resource is removed from the topology as soon as it is
unavailable. This simplified view can facilitate changes in experimental
environments.

New feature: Resources should be only marked as unavailable, but not
removed without strict orders from the network administrator. In a real network
every resource must be mapped by the NApp as it is in the real world: a
resource must be removed from the topology only if it is really removed from
the physical network itself.

Implementation design: Every resource in the topology may have flags marking
them as:

- Up: if the resource is up and running, active in the topology;
- Administratively Down: if the resource is disabled by the network
  administrator;
- Down: if the resource is present in the real network but not working;
- Absent: If the resource is no more available in the real network.

Moreover, we need an endpoint to manually delete resources from the topology.

Milestone: X
============

*Dependencies:*

*Target Release:* TBA

*Features:*
